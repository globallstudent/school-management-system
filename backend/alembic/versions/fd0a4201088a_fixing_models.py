"""fixing models

Revision ID: fd0a4201088a
Revises: 693740e2e37c
Create Date: 2025-04-27 13:12:15.931938

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fd0a4201088a'
down_revision: Union[str, None] = '693740e2e37c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'STUDENT', 'TEACHER', 'PARENT', name='userrole'), nullable=False),
    sa.Column('sex', sa.Enum('MALE', 'FEMALE', name='usersex'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.drop_constraint('admins_username_key', 'admins', type_='unique')
    op.create_foreign_key(None, 'admins', 'users', ['id'], ['id'])
    op.drop_column('admins', 'username')
    op.add_column('announcements', sa.Column('content', sa.String(), nullable=True))
    op.add_column('announcements', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.alter_column('announcements', 'class_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_index(op.f('ix_announcements_id'), 'announcements', ['id'], unique=False)
    op.drop_column('announcements', 'date')
    op.drop_column('announcements', 'description')
    op.add_column('assignments', sa.Column('description', sa.String(), nullable=True))
    op.add_column('assignments', sa.Column('deadline', sa.DateTime(), nullable=False))
    op.create_index(op.f('ix_assignments_id'), 'assignments', ['id'], unique=False)
    op.drop_column('assignments', 'start_date')
    op.drop_column('assignments', 'due_date')
    op.alter_column('attendances', 'present',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.create_index(op.f('ix_attendances_id'), 'attendances', ['id'], unique=False)
    op.drop_column('attendances', 'date')
    op.create_index(op.f('ix_classes_id'), 'classes', ['id'], unique=False)
    op.add_column('events', sa.Column('date', sa.DateTime(), nullable=False))
    op.alter_column('events', 'description',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('events', 'class_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_index(op.f('ix_events_id'), 'events', ['id'], unique=False)
    op.drop_column('events', 'start_time')
    op.drop_column('events', 'end_time')
    op.create_index(op.f('ix_exams_id'), 'exams', ['id'], unique=False)
    op.create_index(op.f('ix_grades_id'), 'grades', ['id'], unique=False)
    op.alter_column('lessons', 'day',
               existing_type=postgresql.ENUM('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', name='day'),
               type_=sa.Enum('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY', name='dayofweek'),
               existing_nullable=False)
    op.create_index(op.f('ix_lessons_id'), 'lessons', ['id'], unique=False)
    op.alter_column('parents', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_constraint('parents_email_key', 'parents', type_='unique')
    op.drop_constraint('parents_username_key', 'parents', type_='unique')
    op.create_foreign_key(None, 'parents', 'users', ['id'], ['id'])
    op.drop_column('parents', 'email')
    op.drop_column('parents', 'surname')
    op.drop_column('parents', 'name')
    op.drop_column('parents', 'username')
    op.alter_column('results', 'exam_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('results', 'score',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=False)
    op.create_index(op.f('ix_results_id'), 'results', ['id'], unique=False)
    op.drop_constraint('results_assignment_id_fkey', 'results', type_='foreignkey')
    op.drop_column('results', 'assignment_id')
    op.alter_column('students', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_constraint('students_username_key', 'students', type_='unique')
    op.create_foreign_key(None, 'students', 'users', ['id'], ['id'])
    op.drop_column('students', 'blood_type')
    op.drop_column('students', 'sex')
    op.drop_column('students', 'username')
    op.create_index(op.f('ix_subjects_id'), 'subjects', ['id'], unique=False)
    op.alter_column('teacher_subject', 'teacher_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('teacher_subject', 'subject_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('teachers', 'birthday',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('teachers', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_constraint('teachers_email_key', 'teachers', type_='unique')
    op.drop_constraint('teachers_username_key', 'teachers', type_='unique')
    op.create_foreign_key(None, 'teachers', 'users', ['id'], ['id'])
    op.drop_column('teachers', 'sex')
    op.drop_column('teachers', 'username')
    op.drop_column('teachers', 'email')
    op.drop_column('teachers', 'blood_type')
    op.drop_column('teachers', 'surname')
    op.drop_column('teachers', 'name')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('teachers', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('teachers', sa.Column('surname', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('teachers', sa.Column('blood_type', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('teachers', sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('teachers', sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('teachers', sa.Column('sex', postgresql.ENUM('MALE', 'FEMALE', name='usersex'), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'teachers', type_='foreignkey')
    op.create_unique_constraint('teachers_username_key', 'teachers', ['username'])
    op.create_unique_constraint('teachers_email_key', 'teachers', ['email'])
    op.alter_column('teachers', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('teachers', 'birthday',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('teacher_subject', 'subject_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('teacher_subject', 'teacher_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_index(op.f('ix_subjects_id'), table_name='subjects')
    op.add_column('students', sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('students', sa.Column('sex', postgresql.ENUM('MALE', 'FEMALE', name='usersex'), autoincrement=False, nullable=False))
    op.add_column('students', sa.Column('blood_type', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'students', type_='foreignkey')
    op.create_unique_constraint('students_username_key', 'students', ['username'])
    op.alter_column('students', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.add_column('results', sa.Column('assignment_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('results_assignment_id_fkey', 'results', 'assignments', ['assignment_id'], ['id'])
    op.drop_index(op.f('ix_results_id'), table_name='results')
    op.alter_column('results', 'score',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('results', 'exam_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.add_column('parents', sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('parents', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('parents', sa.Column('surname', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('parents', sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'parents', type_='foreignkey')
    op.create_unique_constraint('parents_username_key', 'parents', ['username'])
    op.create_unique_constraint('parents_email_key', 'parents', ['email'])
    op.alter_column('parents', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_index(op.f('ix_lessons_id'), table_name='lessons')
    op.alter_column('lessons', 'day',
               existing_type=sa.Enum('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY', name='dayofweek'),
               type_=postgresql.ENUM('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', name='day'),
               existing_nullable=False)
    op.drop_index(op.f('ix_grades_id'), table_name='grades')
    op.drop_index(op.f('ix_exams_id'), table_name='exams')
    op.add_column('events', sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('events', sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_events_id'), table_name='events')
    op.alter_column('events', 'class_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('events', 'description',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('events', 'date')
    op.drop_index(op.f('ix_classes_id'), table_name='classes')
    op.add_column('attendances', sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_attendances_id'), table_name='attendances')
    op.alter_column('attendances', 'present',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.add_column('assignments', sa.Column('due_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('assignments', sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_assignments_id'), table_name='assignments')
    op.drop_column('assignments', 'deadline')
    op.drop_column('assignments', 'description')
    op.add_column('announcements', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('announcements', sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_announcements_id'), table_name='announcements')
    op.alter_column('announcements', 'class_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('announcements', 'created_at')
    op.drop_column('announcements', 'content')
    op.add_column('admins', sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'admins', type_='foreignkey')
    op.create_unique_constraint('admins_username_key', 'admins', ['username'])
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
